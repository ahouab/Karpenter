<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Karpenter – Documentation</title>
    <link>/preview/</link>
    <description>Recent content in Documentation on Karpenter</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="/preview/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Preview: Provisioning</title>
      <link>/preview/tasks/provisioning-nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/preview/tasks/provisioning-nodes/</guid>
      <description>
        
        
        &lt;p&gt;When you first installed Karpenter, you set up a default Provisioner.
The Provisioner sets constraints on the nodes that can be created by Karpenter and the pods that can run on those nodes.
The Provisioner can be set to do things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define taints to limit the pods that can run on nodes Karpenter creates&lt;/li&gt;
&lt;li&gt;Limit node creation to certain zones, instance types, and computer architectures&lt;/li&gt;
&lt;li&gt;Set defaults for node expiration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can change your provisioner or add other provisioners to Karpenter.
Here are things you should know about Provisioners:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Karpenter won&amp;rsquo;t do anything if there is not at least one Provisioner configured.&lt;/li&gt;
&lt;li&gt;Each Provisioner that is configured is looped through by Karpenter.&lt;/li&gt;
&lt;li&gt;If Karpenter encounters a taint in the Provisioner that is not tolerated by a Pod, Karpenter won&amp;rsquo;t use that Provisioner to provision the pod.&lt;/li&gt;
&lt;li&gt;It is recommended to create Provisioners that are mutually exclusive. So no Pod should match multiple Provisioners. If multiple Provisioners are matched, Karpenter will randomly choose which to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to modify or add provisioners to Karpenter, do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Review the following Provisioner documents:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../getting-started/#provisioner&#34;&gt;Provisioner&lt;/a&gt; in the Getting Started guide for a sample default Provisioner&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../provisioner/&#34;&gt;Provisioner API&lt;/a&gt; for descriptions of Provisioner API values&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../AWS/provisioning&#34;&gt;Provisioning Configuration&lt;/a&gt; for cloud-specific settings&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Apply the new or modified Provisioner to the cluster.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following examples illustrate different aspects of Provisioners.
Refer to &lt;a href=&#34;../running-pods&#34;&gt;Running pods&lt;/a&gt; to see how the same features are used in Pod specs to determine where pods run.&lt;/p&gt;
&lt;h2 id=&#34;example-requirements&#34;&gt;Example: Requirements&lt;/h2&gt;
&lt;p&gt;This provisioner limits nodes to specific zones.
It is flexible to both spot and on-demand capacity types.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: westzones
spec:
  requirements:
    - key: &amp;quot;topology.kubernetes.io/zone&amp;quot;
      operator: In
      values: [&amp;quot;us-west-2a&amp;quot;, &amp;quot;us-west-2b&amp;quot;, &amp;quot;us-west-2c&amp;quot;]
    - key: &amp;quot;karpenter.sh/capacity-type&amp;quot;
      operator: In
      values: [&amp;quot;spot&amp;quot;, &amp;quot;on-demand&amp;quot;]
  provider:
    instanceProfile: myprofile-cluster101
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With these settings, the provisioner is able to launch nodes in three availability zones and is flexible to both spot and on-demand purchase types.&lt;/p&gt;
&lt;h2 id=&#34;example-isolating-expensive-hardware&#34;&gt;Example: Isolating Expensive Hardware&lt;/h2&gt;
&lt;p&gt;A provisioner can be set up to only provision nodes on particular processor types.
The following example sets a taint that only allows pods with tolerations for Nvidia GPUs to be scheduled:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: gpu
spec:
  ttlSecondsAfterEmpty: 60
  requirements:
  - key: node.kubernetes.io/instance-type
    operator: In
    values: [&amp;quot;p3.8xlarge&amp;quot;, &amp;quot;p3.16xlarge&amp;quot;]
  taints:
  - key: nvidia.com/gpu
    value: true
    effect: “NoSchedule”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In order for a pod to run on a node defined in this provisioner, it must tolerate &lt;code&gt;nvidia.com/gpu&lt;/code&gt; in its pod spec.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Preview: Deprovisioning</title>
      <link>/preview/tasks/deprovisioning-nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/preview/tasks/deprovisioning-nodes/</guid>
      <description>
        
        
        &lt;h2 id=&#34;deletion-workflow&#34;&gt;Deletion Workflow&lt;/h2&gt;
&lt;h3 id=&#34;finalizer&#34;&gt;Finalizer&lt;/h3&gt;
&lt;p&gt;Karpenter adds a finalizer to provisioned nodes. &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/finalizers/#how-finalizers-work&#34;&gt;Review how finalizers work.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;drain-nodes&#34;&gt;Drain Nodes&lt;/h3&gt;
&lt;p&gt;Review how to &lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/safely-drain-node/&#34;&gt;safely drain a node&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;delete-node&#34;&gt;Delete Node&lt;/h2&gt;
&lt;p&gt;Karpenter changes the behavior of &lt;code&gt;kubectl delete node&lt;/code&gt;. Nodes will be drained, and then the underlying instance will be deleted.&lt;/p&gt;
&lt;h2 id=&#34;disruption-budget&#34;&gt;Disruption Budget&lt;/h2&gt;
&lt;p&gt;Karpenter respects Pod Disruption Budgets. Review what &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/disruptions/&#34;&gt;disruptions are&lt;/a&gt;, and &lt;a href=&#34;https://kubernetes.io/docs/tasks/run-application/configure-pdb/&#34;&gt;how to configure them&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Generally, pod workloads may be configured with &lt;code&gt;.spec.minAvailable&lt;/code&gt; and/or &lt;code&gt;.spec.maxUnavailable&lt;/code&gt;. Karpenter provisions nodes to accommodate these constraints.&lt;/p&gt;
&lt;h2 id=&#34;emptiness&#34;&gt;Emptiness&lt;/h2&gt;
&lt;p&gt;Karpenter will delete nodes (and the instance) that are considered empty of pods. Daemonset pods are not included in this calculation.&lt;/p&gt;
&lt;h2 id=&#34;expiry&#34;&gt;Expiry&lt;/h2&gt;
&lt;p&gt;Nodes may be configured to expire. That is, a maximum lifetime in seconds starting with the node joining the cluster. Review the &lt;code&gt;ttlSecondsUntilExpired&lt;/code&gt; field of the &lt;a href=&#34;../../provisioner/&#34;&gt;provisioner API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that newly created nodes have a Kubernetes version matching the control plane. One use case for node expiry is to handle node upgrades. Old nodes (with a potentially outdated Kubernetes version) are deleted, and replaced with nodes on the current version.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Preview: Provisioning Configuration</title>
      <link>/preview/aws/provisioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/preview/aws/provisioning/</guid>
      <description>
        
        
        &lt;h2 id=&#34;specprovider&#34;&gt;spec.provider&lt;/h2&gt;
&lt;p&gt;This section covers parameters of the AWS Cloud Provider.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/karpenter/blob/main/pkg/cloudprovider/aws/apis/v1alpha1/provider.go#L33&#34;&gt;Review these fields in the code.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;instanceprofile&#34;&gt;InstanceProfile&lt;/h3&gt;
&lt;p&gt;An &lt;code&gt;InstanceProfile&lt;/code&gt; is a way to pass a single IAM role to an EC2 instance.&lt;/p&gt;
&lt;p&gt;It is required, and specified by name. A suitable &lt;code&gt;KarpenterNodeRole&lt;/code&gt; is created in the getting started guide.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spec:
  provider:
    instanceProfile: MyInstanceProfile
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;launchtemplate&#34;&gt;LaunchTemplate&lt;/h3&gt;
&lt;p&gt;A launch template is a set of configuration values sufficient for launching an EC2 instance (e.g., AMI, storage spec).&lt;/p&gt;
&lt;p&gt;A custom launch template is specified by name. If none is specified, Karpenter will automatically create a launch template.&lt;/p&gt;
&lt;p&gt;Review the &lt;a href=&#34;../launch-templates/&#34;&gt;Launch Template documentation&lt;/a&gt; to learn how to create a custom one.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spec:
  provider:
    launchTemplate: MyLaunchTemplate
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;subnetselector&#34;&gt;SubnetSelector&lt;/h3&gt;
&lt;p&gt;Karpenter discovers subnets using &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html&#34;&gt;AWS tags&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Subnets may be specified by any AWS tag, including &lt;code&gt;Name&lt;/code&gt;. Selecting tag values using wildcards (&amp;quot;*&amp;quot;) is supported.&lt;/p&gt;
&lt;p&gt;When launching nodes, Karpenter automatically chooses a subnet that matches the desired zone. If multiple subnets exist for a zone, one is chosen randomly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Select all subnets with a specified tag:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  subnetSelector:
    kubernetes.io/cluster/MyCluster: &#39;*&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Select subnets by name:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  subnetSelector:
    Name: subnet-0fcd7006b3754e95e
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Select subnets by an arbitrary AWS tag key/value pair:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  subnetSelector:
    MySubnetTag: value
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Select subnets using wildcards:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  subnetSelector:
    Name: *public*

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;securitygroupselector&#34;&gt;SecurityGroupSelector&lt;/h3&gt;
&lt;p&gt;The security group of an instance is comparable to a set of firewall rules.
If no security groups are explicitly listed, Karpenter discovers them using the tag &amp;ldquo;kubernetes.io/cluster/MyClusterName&amp;rdquo;, similar to subnet discovery.&lt;/p&gt;
&lt;p&gt;EKS creates at least two security groups by default, &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html&#34;&gt;review the documentation&lt;/a&gt; for more info.&lt;/p&gt;
&lt;p&gt;Security groups may be specified by any AWS tag, including &amp;ldquo;name&amp;rdquo;. Selecting tags using wildcards (&amp;quot;*&amp;quot;) is supported.&lt;/p&gt;
&lt;p&gt;‼️ When launching nodes, Karpenter uses all of the security groups that match the selector. If multiple security groups with the tag &lt;code&gt;kubernetes.io/cluster/MyClusterName&lt;/code&gt; match the selector, this may result in failures using the AWS Load Balancer controller. The Load Balancer controller only supports a single security group having that tag key. See this &lt;a href=&#34;https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues/2367&#34;&gt;issue&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;To verify if this restriction affects you, run the following commands.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;CLUSTER_VPC_ID&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;aws eks describe-cluster --name &lt;span style=&#34;color:#000&#34;&gt;$CLUSTER_NAME&lt;/span&gt; --query cluster.resourcesVpcConfig.vpcId --output text&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;

aws ec2 describe-security-groups --filters &lt;span style=&#34;color:#000&#34;&gt;Name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;vpc-id,Values&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$CLUSTER_VPC_ID&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;tag-key,Values&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;kubernetes.io/cluster/&lt;span style=&#34;color:#000&#34;&gt;$CLUSTER_NAME&lt;/span&gt; --query SecurityGroups&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[]&lt;/span&gt;.&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;GroupName&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; --output text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If multiple securityGroups are printed, you will need a more targeted securityGroupSelector.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Select all security groups with a specified tag:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spec:
  provider:
    securityGroupSelector:
      kubernetes.io/cluster/MyKarpenterSecurityGroups: &#39;*&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Select security groups by name, or another tag (all criteria must match):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; securityGroupSelector:
   Name: sg-01077157b7cf4f5a8
   MySecurityTag: &#39;&#39; # matches all resources with the tag
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Select security groups by name using a wildcard:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; securityGroupSelector:
   Name: *public*
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;tags&#34;&gt;Tags&lt;/h3&gt;
&lt;p&gt;Tags will be added to every EC2 Instance launched by this provisioner.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spec:
  provider:
    tags:
      InternalAccountingTag: 1234
      dev.corp.net/app: Calculator
      dev.corp.net/team: MyTeam
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note: Karpenter will set the default AWS tags listed below, but these can be overridden in the tags section above.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Name: karpenter.sh/cluster/&amp;lt;cluster-name&amp;gt;/provisioner/&amp;lt;provisioner-name&amp;gt;
karpenter.sh/cluster/&amp;lt;cluster-name&amp;gt;: owned
kubernetes.io/cluster/&amp;lt;cluster-name&amp;gt;: owned
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;other-resources&#34;&gt;Other Resources&lt;/h2&gt;
&lt;h3 id=&#34;accelerators-gpu&#34;&gt;Accelerators, GPU&lt;/h3&gt;
&lt;p&gt;Accelerator (e.g., GPU) values include&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nvidia.com/gpu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;amd.com/gpu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aws.amazon.com/neuron&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Karpenter supports accelerators, such as GPUs.&lt;/p&gt;
&lt;p&gt;Additionally, include a resource requirement in the workload manifest. This will cause the GPU dependent pod will be scheduled onto the appropriate node.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Accelerator resource in workload manifest (e.g., pod)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resources&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;limits&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nvidia.com/gpu&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Preview: Scheduling</title>
      <link>/preview/tasks/scheduling-pods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/preview/tasks/scheduling-pods/</guid>
      <description>
        
        
        &lt;p&gt;If your pods have no requirements for how or where to run, you can let Karpenter choose nodes from the full range of available cloud provider resources.
However, by taking advantage of Karpenter&amp;rsquo;s model of layered constraints, you can be sure that the precise type and amount of resources needed are available to your pods.
Reasons for constraining where your pods run could include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Needing to run in zones where dependent applications or storage are available&lt;/li&gt;
&lt;li&gt;Requiring certain kinds of processors or other hardware&lt;/li&gt;
&lt;li&gt;Wanting to use techniques like topology spread to help insure high availability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your Cloud Provider defines the first layer of constraints, including all instance types, architectures, zones, and purchase types available to its cloud.
The cluster administrator adds the next layer of constraints by creating one or more provisioners.
The final layer comes from you adding specifications to your Kubernetes pod deployments.
Pod scheduling constraints must fall within a provisioner&amp;rsquo;s constraints or the pods will not deploy.
For example, if the provisioner sets limits that allow only a particular zone to be used, and a pod asks for a different zone, it will not be scheduled.&lt;/p&gt;
&lt;p&gt;Constraints you can request include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Resource requests&lt;/strong&gt;: Request that certain amount of memory or CPU be available.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node selection&lt;/strong&gt;: Choose to run on a node that is has a particular label (&lt;code&gt;nodeSelector&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node affinity&lt;/strong&gt;: Draws a pod to run on nodes with particular attributes (affinity).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Topology spread&lt;/strong&gt;: Use topology spread to help insure availability of the application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Karpenter supports standard Kubernetes scheduling constraints.
This allows you to define a single set of rules that apply to both existing and provisioned capacity.
Pod affinity is a key exception to this rule.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    Karpenter supports specific &lt;a href=&#34;https://kubernetes.io/docs/reference/labels-annotations-taints/&#34;&gt;Well-Known Labels, Annotations and Taints&lt;/a&gt; that are useful for scheduling.

&lt;/div&gt;

&lt;h2 id=&#34;resource-requests&#34;&gt;Resource requests&lt;/h2&gt;
&lt;p&gt;Within a Pod spec, you can both make requests and set limits on resources a pod needs, such as CPU and memory.
For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: Pod
metadata:
  name: myapp
spec:
  containers:
  - name: app
    image: myimage
    resources:
      requests:
        memory: &amp;quot;128Mi&amp;quot;
        cpu: &amp;quot;500m&amp;quot;
      limits:
        memory: &amp;quot;256Mi&amp;quot;
        cpu: &amp;quot;1000m&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In this example, the container is requesting 128MiB of memory and .5 CPU.
Its limits are set to 256MiB of memory and 1 CPU.
Instance type selection math only uses &lt;code&gt;requests&lt;/code&gt;, but &lt;code&gt;limits&lt;/code&gt; may be configured to enable resource oversubscription.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&#34;&gt;Managing Resources for Containers&lt;/a&gt; for details on resource types supported by Kubernetes, &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/#specify-a-memory-request-and-a-memory-limit&#34;&gt;Specify a memory request and a memory limit&lt;/a&gt; for examples of memory requests, and &lt;a href=&#34;../../aws/provisioning/&#34;&gt;Provisioning Configuration&lt;/a&gt; for a list of supported resources.&lt;/p&gt;
&lt;h2 id=&#34;selecting-nodes&#34;&gt;Selecting nodes&lt;/h2&gt;
&lt;p&gt;With &lt;code&gt;nodeSelector&lt;/code&gt; you can ask for a node that matches selected key-value pairs.
This can include well-known labels or custom labels you create yourself.&lt;/p&gt;
&lt;p&gt;While &lt;code&gt;nodeSelector&lt;/code&gt; is like node affinity, it doesn&amp;rsquo;t have the same &amp;ldquo;and/or&amp;rdquo; matchExpressions that affinity has.
So all key-value pairs must match if you use &lt;code&gt;nodeSelector&lt;/code&gt;.
Also, &lt;code&gt;nodeSelector&lt;/code&gt; can do only do inclusions, while &lt;code&gt;affinity&lt;/code&gt; can do inclusions and exclusions (&lt;code&gt;In&lt;/code&gt; and &lt;code&gt;NotIn&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&#34;node-selectors&#34;&gt;Node selectors&lt;/h3&gt;
&lt;p&gt;Here is an example of a &lt;code&gt;nodeSelector&lt;/code&gt; for selecting nodes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nodeSelector:
  topology.kubernetes.io/zone: us-west-2a
  karpenter.sh/capacity-type: spot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This example features a well-known label (&lt;code&gt;topology.kubernetes.io/zone&lt;/code&gt;) and a label that is well known to Karpenter (&lt;code&gt;karpenter.sh/capacity-type&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;If you want to create a custom label, you should do that at the provisioner level.
Then the pod can declare that custom label.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector&#34;&gt;nodeSelector&lt;/a&gt; in the Kubernetes documentation for details.&lt;/p&gt;
&lt;h3 id=&#34;node-affinity&#34;&gt;Node affinity&lt;/h3&gt;
&lt;p&gt;Examples below illustrate how to use Node affinity to include (&lt;code&gt;In&lt;/code&gt;) and exclude (&lt;code&gt;NotIn&lt;/code&gt;) objects.
See &lt;a href=&#34;https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity&#34;&gt;Node affinity&lt;/a&gt; for details.
When setting rules, the following Node affinity types define how hard or soft each rule is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;requiredDuringSchedulingIgnoredDuringExecution&lt;/strong&gt;: This is a hard rule that must be met.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;preferredDuringSchedulingIgnoredDuringExecution&lt;/strong&gt;: This is a preference, but the pod can run on a node where it is not guaranteed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;IgnoredDuringExecution&lt;/code&gt; part of each tells the pod to keep running, even if conditions change on the node so the rules no longer matched.
You can think of these concepts as &lt;code&gt;required&lt;/code&gt; and &lt;code&gt;preferred&lt;/code&gt;, since Kubernetes never implemented other variants of these rules.&lt;/p&gt;
&lt;p&gt;All examples below assume that the provisioner doesn&amp;rsquo;t have constraints to prevent those zones from being used.
The first constraint says you could use &lt;code&gt;us-west-2a&lt;/code&gt; or &lt;code&gt;us-west-2b&lt;/code&gt;, the second constraint makes it so only &lt;code&gt;us-west-2b&lt;/code&gt; can be used.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; affinity:
   nodeAffinity:
     requiredDuringSchedulingIgnoredDuringExecution:
       nodeSelectorTerms:
         - matchExpressions:
           - key: &amp;quot;topology.kubernetes.io/zone&amp;quot;
             operator: &amp;quot;In&amp;quot;
             values: [&amp;quot;us-west-2a, us-west-2b&amp;quot;]
           - key: &amp;quot;topology.kubernetes.io/zone&amp;quot;
             operator: &amp;quot;In&amp;quot;
             values: [&amp;quot;us-west-2b&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Changing the second operator to &lt;code&gt;NotIn&lt;/code&gt; would allow the pod to run in &lt;code&gt;us-west-2a&lt;/code&gt; only:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;           - key: &amp;quot;topology.kubernetes.io/zone&amp;quot;
             operator: &amp;quot;In&amp;quot;
             values: [&amp;quot;us-west-2a, us-west-2b&amp;quot;]
           - key: &amp;quot;topology.kubernetes.io/zone&amp;quot;
             operator: &amp;quot;NotIn&amp;quot;
             values: [&amp;quot;us-west-2b&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Continuing to add to the example, &lt;code&gt;nodeAffinity&lt;/code&gt; lets you define terms so if one term doesn&amp;rsquo;t work it goes to the next one.
Here, if &lt;code&gt;us-west-2a&lt;/code&gt; is not available, the second term will cause the pod to run on a spot instance in &lt;code&gt;us-west-2d&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; affinity:
   nodeAffinity:
     requiredDuringSchedulingIgnoredDuringExecution:
       nodeSelectorTerms:
         - matchExpressions: # OR
           - key: &amp;quot;topology.kubernetes.io/zone&amp;quot; # AND
             operator: &amp;quot;In&amp;quot;
             values: [&amp;quot;us-west-2a, us-west-2b&amp;quot;]
           - key: &amp;quot;topology.kubernetes.io/zone&amp;quot; # AND
             operator: &amp;quot;NotIn&amp;quot;
             values: [&amp;quot;us-west-2b&amp;quot;]
         - matchExpressions: # OR
           - key: &amp;quot;karpenter.sh/capacity-type&amp;quot; # AND
             operator: &amp;quot;In&amp;quot;
             values: [&amp;quot;spot&amp;quot;]
           - key: &amp;quot;topology.kubernetes.io/zone&amp;quot; # AND
             operator: &amp;quot;In&amp;quot;
             values: [&amp;quot;us-west-2d&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In general, Karpenter will go through each of the &lt;code&gt;nodeSelectorTerms&lt;/code&gt; in order and take the first one that works.
However, if Karpenter fails to provision on the first &lt;code&gt;nodeSelectorTerms&lt;/code&gt;, it will try again using the second one.
If they all fail, Karpenter will fail to provision the pod.
Karpenter will backoff and retry over time.
So if capacity becomes available, it will schedule the pod without user intervention.&lt;/p&gt;
&lt;h2 id=&#34;taints-and-tolerations&#34;&gt;Taints and tolerations&lt;/h2&gt;
&lt;p&gt;Taints are the opposite of affinity.
Setting a taint on a node tells the scheduler to not run a pod on it unless the pod has explicitly said it can tolerate that taint.
This example shows a Provisioner that was set up with a taint for only running pods that require a GPU, such as the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: gpu
spec:
  requirements:
  - key: node.kubernetes.io/instance-type
    operator: In
    values:
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
  taints:
  - key: nvidia.com/gpu
    value: true
    effect: “NoSchedule”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For a pod to request to run on a node that has provisioner, it could set a toleration as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: Pod
metadata:
  name: mygpupod
spec:
  containers:
  - name: gpuapp
    resources:
      requests:
        nvidia.com/gpu: 1
      limits:
        nvidia.com/gpu: 1
    image: mygpucontainer
  tolerations:
  - key: &amp;quot;nvidia.com/gpu&amp;quot;
    operator: &amp;quot;Exists&amp;quot;
    effect: &amp;quot;NoSchedule&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See &lt;a href=&#34;https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/&#34;&gt;Taints and Tolerations&lt;/a&gt; in the Kubernetes documentation for details.&lt;/p&gt;
&lt;h2 id=&#34;topology-spread&#34;&gt;Topology Spread&lt;/h2&gt;
&lt;p&gt;By using the Kubernetes &lt;code&gt;topologySpreadConstraints&lt;/code&gt; you can ask the provisioner to have pods push away from each other to limit the blast radius of an outage.
Think of it as the Kubernetes evolution for pod affinity: it lets you relate pods with respect to nodes while still allowing spread.
For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spec:
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: &amp;quot;topology.kubernetes.io/zone&amp;quot;
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          dev: jjones
    - maxSkew: 1
      topologyKey: &amp;quot;kubernetes.io/hostname&amp;quot;
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          dev: jjones

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Adding this to your podspec would result in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pods being spread across both zones and hosts (&lt;code&gt;topologyKey&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;dev&lt;/code&gt; &lt;code&gt;labelSelector&lt;/code&gt; will include all pods with the label of &lt;code&gt;dev=jjones&lt;/code&gt; in topology calculations. It is recommended to use a selector to match all pods in a deployment.&lt;/li&gt;
&lt;li&gt;No more than one pod difference in the number of pods on each host (&lt;code&gt;maxSkew&lt;/code&gt;).
For example, if there were three nodes and five pods the pods could be spread 1, 2, 2 or 2, 1, 2 and so on.
If instead the spread were 5, pods could be 5, 0, 0 or 3, 2, 0, or 2, 1, 2 and so on.&lt;/li&gt;
&lt;li&gt;Karpenter is always able to improve skew by launching new nodes in the right zones. Therefore, &lt;code&gt;whenUnsatisfiable&lt;/code&gt; does not change provisioning behavior.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/&#34;&gt;Pod Topology Spread Constraints&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2 id=&#34;persistent-volume-topology&#34;&gt;Persistent Volume Topology&lt;/h2&gt;
&lt;p&gt;Karpenter automatically detects storage scheduling requirements and includes them in node launch decisions.&lt;/p&gt;
&lt;p&gt;In the following example, the &lt;code&gt;StorageClass&lt;/code&gt; defines zonal topologies for &lt;code&gt;us-west-2a&lt;/code&gt; and &lt;code&gt;us-west-2b&lt;/code&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/storage-classes/#volume-binding-mode&#34;&gt;binding mode &lt;code&gt;WaitForFirstConsumer&lt;/code&gt;&lt;/a&gt;.
When the pod is created, Karpenter follows references from the &lt;code&gt;Pod&lt;/code&gt; to &lt;code&gt;PersistentVolumeClaim&lt;/code&gt; to &lt;code&gt;StorageClass&lt;/code&gt; and identifies that this pod requires storage in &lt;code&gt;us-west-2a&lt;/code&gt; and &lt;code&gt;us-west-2b&lt;/code&gt;.
It randomly selects &lt;code&gt;us-west-2a&lt;/code&gt;, provisions a node in that zone, and binds the pod to the node.
The CSI driver creates a &lt;code&gt;PersistentVolume&lt;/code&gt; according to the &lt;code&gt;PersistentVolumeClaim&lt;/code&gt; and gives it a node affinity rule for &lt;code&gt;us-west-2a&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Later on, the pod is deleted and a new pod is created that requests the same claim. This time, Karpenter identifies that a &lt;code&gt;PersistentVolume&lt;/code&gt; already exists for the &lt;code&gt;PersistentVolumeClaim&lt;/code&gt;, and includes its zone &lt;code&gt;us-west-2a&lt;/code&gt; in the pod&amp;rsquo;s scheduling requirements.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Pod&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;volumes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;storage&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;persistentVolumeClaim&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;claimName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ebs-claim&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;StorageClass&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;storage.k8s.io/v1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ebs&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;provisioner&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ebs.csi.aws.com&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;volumeBindingMode&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WaitForFirstConsumer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;allowedTopologies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;matchLabelExpressions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;topology.ebs.csi.aws.com/zone&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;us-west-2a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;us-west-2b&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PersistentVolumeClaim&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ebs-claim&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;accessModes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;ReadWriteOnce&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;storageClassName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ebs&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resources&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;storage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;4Gi&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    &lt;p&gt;☁️ AWS Specific&lt;/p&gt;
&lt;p&gt;The EBS CSI driver uses &lt;code&gt;topology.ebs.csi.aws.com/zone&lt;/code&gt; instead of the standard &lt;code&gt;topology.kubernetes.io/zone&lt;/code&gt; label. Karpenter is aware of label aliasing and translates this label into &lt;code&gt;topology.kubernetes.io/zone&lt;/code&gt; in memory. When configuring a &lt;code&gt;StorageClass&lt;/code&gt; for the EBS CSI Driver, you must use &lt;code&gt;topology.ebs.csi.aws.com/zone&lt;/code&gt;.&lt;/p&gt;


&lt;/div&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;

    The topology key &lt;code&gt;topology.kubernetes.io/region&lt;/code&gt; is not supported. Legacy in-tree CSI providers specify this label. Instead, install an out-of-tree CSI provider. &lt;a href=&#34;https://kubernetes.io/blog/2021/12/10/storage-in-tree-to-csi-migration-status-update/#quick-recap-what-is-csi-migration-and-why-migrate&#34;&gt;Learn more about moving to CSI providers.&lt;/a&gt;

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Preview: Provisioner API</title>
      <link>/preview/provisioner/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/preview/provisioner/</guid>
      <description>
        
        
        &lt;h2 id=&#34;example-provisioner-resource&#34;&gt;Example Provisioner Resource&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;karpenter.sh/v1alpha5&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Provisioner&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# If nil, the feature is disabled, nodes will never expire&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ttlSecondsUntilExpired&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2592000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 30 Days = 60 * 60 * 24 * 30 Seconds;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# If nil, the feature is disabled, nodes will never scale down due to low utilization&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ttlSecondsAfterEmpty&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Provisioned nodes will have these taints&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Taints may prevent pods from scheduling if they are not tolerated&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;taints&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;example.com/special-taint&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;effect&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;NoSchedule&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Labels are arbitrary key-values that are applied to all nodes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;billing-team&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;my-team&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Requirements that constrain the parameters of provisioned nodes.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# These requirements are combined with pod.spec.affinity.nodeAffinity rules.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Operators { In, NotIn } are supported to enable including or excluding values&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;requirements&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;node.kubernetes.io/instance-type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;In&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;m5.large&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;m5.2xlarge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;topology.kubernetes.io/zone&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;In&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;us-west-2a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;us-west-2b&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kubernetes.io/arch&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;In&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;arm64&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;amd64&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;karpenter.sh/capacity-type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# If not included, the webhook for the AWS cloud provider will default to on-demand&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;In&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;spot&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;on-demand&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# These fields vary per cloud provider, see your cloud provider specific documentation&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;provider&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;specrequirements&#34;&gt;spec.requirements&lt;/h2&gt;
&lt;p&gt;Kubernetes defines the following &lt;a href=&#34;https://kubernetes.io/docs/reference/labels-annotations-taints/&#34;&gt;Well-Known Labels&lt;/a&gt;, and cloud providers (e.g., AWS) implement them. They are defined at the &amp;ldquo;spec.requirements&amp;rdquo; section of the Provisioner API.&lt;/p&gt;
&lt;p&gt;These well known labels may be specified at the provisioner level, or in a workload definition (e.g., nodeSelector on a pod.spec). Nodes are chosen using the both the provisioner&amp;rsquo;s and pod&amp;rsquo;s requirements. If there is no overlap, nodes will not be launched. In other words, a pod&amp;rsquo;s requirements must be within the provisioner&amp;rsquo;s requirements. If a requirement is not defined for a well known label, any value available to the cloud provider may be chosen.&lt;/p&gt;
&lt;p&gt;For example, an instance type may be specified using a nodeSelector in a pod spec. If the instance type requested is not included in the provisioner list and the provisioner has instance type requirements, Karpenter will not create a node or schedule the pod.&lt;/p&gt;
&lt;p&gt;📝 None of these values are required.&lt;/p&gt;
&lt;h3 id=&#34;instance-types&#34;&gt;Instance Types&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;key: &lt;code&gt;node.kubernetes.io/instance-type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Generally, instance types should be a list and not a single value. Leaving this field undefined is recommended, as it maximizes choices for efficiently placing pods.&lt;/p&gt;
&lt;p&gt;☁️ &lt;strong&gt;AWS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Review &lt;a href=&#34;https://aws.amazon.com/ec2/instance-types/&#34;&gt;AWS instance types&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The default value includes all instance types with the exclusion of metal
(non-virtualized),
&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/virtualization_types.html&#34;&gt;non-HVM&lt;/a&gt;,
and GPU instances.&lt;/p&gt;
&lt;p&gt;View the full list of instance types with &lt;code&gt;aws ec2 describe-instance-types&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Set Default with provisioner.yaml&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;requirements&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;node.kubernetes.io/instance-type&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;In&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;m5.large&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;m5.2xlarge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Override with workload manifest (e.g., pod)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nodeSelector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;node.kubernetes.io/instance-type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m5.large&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;availability-zones&#34;&gt;Availability Zones&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;key: &lt;code&gt;topology.kubernetes.io/zone&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;value example: &lt;code&gt;us-east-1c&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;☁️ &lt;strong&gt;AWS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;value list: &lt;code&gt;aws ec2 describe-availability-zones --region &amp;lt;region-name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Karpenter can be configured to create nodes in a particular zone. Note that the Availability Zone &lt;code&gt;us-east-1a&lt;/code&gt; for your AWS account might not have the same location as &lt;code&gt;us-east-1a&lt;/code&gt; for another AWS account.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html&#34;&gt;Learn more about Availability Zone
IDs.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;architecture&#34;&gt;Architecture&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;key: &lt;code&gt;kubernetes.io/arch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;values
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;amd64&lt;/code&gt; (default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arm64&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Karpenter supports &lt;code&gt;amd64&lt;/code&gt; nodes, and &lt;code&gt;arm64&lt;/code&gt; nodes.&lt;/p&gt;
&lt;h3 id=&#34;capacity-type&#34;&gt;Capacity Type&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;key: &lt;code&gt;karpenter.sh/capacity-type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;☁️ &lt;strong&gt;AWS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;values
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;spot&lt;/code&gt; (default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on-demand&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Karpenter supports specifying capacity type, which is analogous to &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-purchasing-options.html&#34;&gt;EC2 purchase options&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;speckubeletconfiguration&#34;&gt;spec.kubeletConfiguration&lt;/h2&gt;
&lt;p&gt;Karpenter provides the ability to specify a few additional Kubelet args. These are all optional and provide support for
additional customization and use cases. Adjust these only if you know you need to do so.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kubeletConfiguration&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;clusterDNS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.0.1.100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;specprovider&#34;&gt;spec.provider&lt;/h2&gt;
&lt;p&gt;This section is cloud provider specific. Reference the appropriate documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../aws/provisioning/&#34;&gt;AWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Preview: Development Guide</title>
      <link>/preview/development-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/preview/development-guide/</guid>
      <description>
        
        
        &lt;h2 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;The following tools are required for contributing to the Karpenter project.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Install&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://golang.org/dl/&#34;&gt;go&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;v1.15.3+&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34;&gt;kubectl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;brew install kubectl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://helm.sh/docs/intro/install/&#34;&gt;helm&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;brew install helm&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Other tools&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;make toolchain&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;developing&#34;&gt;Developing&lt;/h2&gt;
&lt;h3 id=&#34;setup--teardown&#34;&gt;Setup / Teardown&lt;/h3&gt;
&lt;p&gt;Based on how you are running your Kubernetes cluster, follow the &lt;a href=&#34;#environment-specific-setup&#34;&gt;Environment specific setup&lt;/a&gt; to configure your environment before you continue. Once you have your environment set up, to install Karpenter in the Kubernetes cluster specified in your &lt;code&gt;~/.kube/config&lt;/code&gt;  run the following commands.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CLOUD_PROVIDER=&amp;lt;YOUR_PROVIDER&amp;gt; make apply # Install Karpenter
make delete # Uninstall Karpenter
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;developer-loop&#34;&gt;Developer Loop&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Make sure dependencies are installed
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;make codegen&lt;/code&gt; to make sure yaml manifests are generated&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;make toolchain&lt;/code&gt; to install cli tools for building and testing the project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You will need a personal development image repository (e.g. ECR)
&lt;ul&gt;
&lt;li&gt;Make sure you have valid credentials to your development repository.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$KO_DOCKER_REPO&lt;/code&gt; must point to your development repository&lt;/li&gt;
&lt;li&gt;Your cluster must have permissions to read from the repository&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you created your cluster on version 1.19 or above, you may need to tag your subnets as mentioned &lt;a href=&#34;&#34;&gt;here&lt;/a&gt;. This is a temporary problem with our subnet discovery system, and is being tracked &lt;a href=&#34;https://github.com/aws/karpenter/issues/404#issuecomment-845283904&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s also a good idea to persist &lt;code&gt;$CLOUD_PROVIDER&lt;/code&gt; in your environment variables to simplify the &lt;code&gt;make apply&lt;/code&gt; command.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;build-and-deploy&#34;&gt;Build and Deploy&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Note: these commands do not rely on each other and may be executed independently&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;make apply &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# quickly deploy changes to your cluster&lt;/span&gt;
make dev &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# run codegen, lint, and tests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;testing&#34;&gt;Testing&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;make &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt;       &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# E2e correctness tests&lt;/span&gt;
make battletest &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# More rigorous tests run in CI environment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;verbose-logging&#34;&gt;Verbose Logging&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl patch configmap config-logging -n karpenter --patch &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{&amp;#34;data&amp;#34;:{&amp;#34;loglevel.controller&amp;#34;:&amp;#34;debug&amp;#34;}}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;debugging-metrics&#34;&gt;Debugging Metrics&lt;/h3&gt;
&lt;p&gt;OSX:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;open http://localhost:8080/metrics &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; kubectl port-forward service/karpenter-metrics -n karpenter &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Linux:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;gio open http://localhost:8080/metrics &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; kubectl port-forward service/karpenter-metrics -n karpenter &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;tailing-logs&#34;&gt;Tailing Logs&lt;/h3&gt;
&lt;p&gt;While you can tail Karpenter&amp;rsquo;s logs with kubectl, there&amp;rsquo;s a number of tools out there that enhance the experience. We recommend &lt;a href=&#34;https://pkg.go.dev/github.com/planetscale/stern#section-readme&#34;&gt;Stern&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;stern -l &lt;span style=&#34;color:#000&#34;&gt;karpenter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;controller -n karpenter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;environment-specific-setup&#34;&gt;Environment specific setup&lt;/h2&gt;
&lt;h3 id=&#34;aws&#34;&gt;AWS&lt;/h3&gt;
&lt;p&gt;Set the CLOUD_PROVIDER environment variable to build cloud provider specific packages of Karpenter.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CLOUD_PROVIDER&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;aws
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For local development on Karpenter you will need a Docker repo which can manage your images for Karpenter components.
You can use the following command to provision an ECR repository.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;aws ecr create-repository &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --repository-name karpenter/controller &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --image-scanning-configuration &lt;span style=&#34;color:#000&#34;&gt;scanOnPush&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --region &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AWS_DEFAULT_REGION&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;
aws ecr create-repository &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --repository-name karpenter/webhook &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --image-scanning-configuration &lt;span style=&#34;color:#000&#34;&gt;scanOnPush&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --region &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AWS_DEFAULT_REGION&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you have your ECR repository provisioned, configure your Docker daemon to authenticate with your newly created repository.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KO_DOCKER_REPO&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AWS_ACCOUNT_ID&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;.dkr.ecr.&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AWS_DEFAULT_REGION&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;.amazonaws.com/karpenter&amp;#34;&lt;/span&gt;
aws ecr get-login-password --region &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AWS_DEFAULT_REGION&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; docker login --username AWS --password-stdin &lt;span style=&#34;color:#000&#34;&gt;$KO_DOCKER_REPO&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Preview: Launch Templates and Custom Images</title>
      <link>/preview/aws/launch-templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/preview/aws/launch-templates/</guid>
      <description>
        
        
        &lt;p&gt;By default, Karpenter generates launch templates that use &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/eks-optimized-ami.html&#34;&gt;EKS Optimized AMI&lt;/a&gt; for nodes. Often, users need to customize the node image to integrate with existing infrastructure or meet compliance requirements. Karpenter supports custom node images through Launch Templates. If you need to customize the node, then you need a custom launch template.&lt;/p&gt;
&lt;p&gt;Note: By customizing the image, you are taking responsibility for maintaining the image, including security updates. In the default configuration, Karpenter will use the latest version of the EKS optimized AMI, which is maintained by AWS.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Karpenter follows existing AWS patterns for customizing the base image of
instances. More specifically, Karpenter uses &lt;a href=&#34;https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html&#34;&gt;EC2 launch templates&lt;/a&gt;. Launch
templates may specify many values. The pivotal value is the base image (AMI).
Launch templates further specify many different parameters related to networking, authorization, instance type, and more.&lt;/p&gt;
&lt;p&gt;Launch Templates and AMIs are unique to AWS regions, similar to EKS clusters. IAM resources are global.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Karpenter only implements a subset of launch template fields, and some fields should not be set.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This guide describes requirements for using launch templates with Karpenter, and later an example procedure.&lt;/p&gt;
&lt;h2 id=&#34;launch-template-requirements&#34;&gt;Launch Template Requirements&lt;/h2&gt;
&lt;p&gt;The Launch Template resource includes a large number of fields. AWS accepts launch templates with any subset of these fields defined.&lt;/p&gt;
&lt;p&gt;Certain fields are obviously critical, such as AMI and User Data. Some fields are useful for particular workloads, such as storage and IAM Instance Profile.&lt;/p&gt;
&lt;p&gt;Finally, &lt;strong&gt;the majority of Launch Template fields should not be set&lt;/strong&gt; (or will have no effect), such as network interfaces and instance type.&lt;/p&gt;
&lt;h2 id=&#34;important-fields&#34;&gt;Important Fields&lt;/h2&gt;
&lt;p&gt;When creating a custom launch template, the AMI and User Data are the defining characteristics. Instance Profile (IAM Role) and Security Group (firewall rules) are also important for Karpenter.&lt;/p&gt;
&lt;h3 id=&#34;ami&#34;&gt;AMI&lt;/h3&gt;
&lt;p&gt;AMI (Amazon Machine Image), is the base image/VM for a launch template.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html&#34;&gt;Review the instructions for importing a VM to AWS.&lt;/a&gt; Note the AMI id generated by this process, such as,
&lt;code&gt;ami-074cce78125f09d61&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;user-data---autoconfigure&#34;&gt;User Data - Autoconfigure&lt;/h3&gt;
&lt;p&gt;Importantly, the AMI must support automatically connecting to a cluster based
on &amp;ldquo;user data&amp;rdquo;, or a base64 encoded string passed to the instance at startup.
The syntax and purpose of the user data varies between images. The Karpenter
default OS, Amazon Linux 2 (AL2), accepts shell scripts (bash commands).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html#user-data-shell-scripts&#34;&gt;AWS calls data passed to an instance at launch time &amp;ldquo;user
data&amp;rdquo;.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the default configuration, Karpenter uses an EKS optimized version of AL2 and passes the hostname of the Kubernetes API server, and a certificate. The EKS Optimized AMI includes a &lt;code&gt;bootstrap.sh&lt;/code&gt; script which connects the instance to the cluster, based on the passed data.&lt;/p&gt;
&lt;p&gt;Alternatively, you may reference AWS&amp;rsquo;s &lt;a href=&#34;https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh&#34;&gt;&lt;code&gt;bootstrap.sh&lt;/code&gt;
file&lt;/a&gt;
when building a custom base image.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
/etc/eks/bootstrap.sh &amp;lt;my-cluster-name&amp;gt; \
--kubelet-extra-args &amp;lt;&#39;--max-pods=40&#39;&amp;gt; \
--b64-cluster-ca &amp;lt;certificateAuthority&amp;gt; \
--apiserver-endpoint &amp;lt;endpoint&amp;gt; \
--dns-cluster-ip &amp;lt;serviceIpv4Cidr&amp;gt; \
--use-max-pods false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note, you must populate this command with live values. Karpenter will
not change the user data in the launch template.&lt;/p&gt;
&lt;p&gt;Encode using yaml function &lt;code&gt;!Base64&lt;/code&gt; yaml function or &lt;code&gt;cat userdata.sh | base64 &amp;gt; userdata-encoded.txt&lt;/code&gt; shell command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bootstrap Script Parameters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The sample bootstrap script requires information to join the cluster.&lt;/p&gt;
&lt;p&gt;These values may be found using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aws eks describe-cluster --name MyKarpenterCluster
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Kubelet Arguments&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Specifying max-pods can break Karpenter&amp;rsquo;s binpacking logic (it has no way to know what this setting is). If Karpenter attempts to pack more than this number of pods, the instance may be oversized, and additional pods will reschedule.&lt;/p&gt;
&lt;h2 id=&#34;situational-fields&#34;&gt;Situational Fields&lt;/h2&gt;
&lt;p&gt;Configure these values in response to a particular use case, such as nodes interacting with another AWS service, or using EBS storage on the node.&lt;/p&gt;
&lt;h3 id=&#34;instance-profile---iam&#34;&gt;Instance Profile - IAM&lt;/h3&gt;
&lt;p&gt;The launch template must include an &amp;ldquo;instance profile&amp;rdquo; &amp;ndash; an IAM role.&lt;/p&gt;
&lt;p&gt;The instance profile must include &lt;em&gt;at least&lt;/em&gt; the permissions of the default Karpenter node instance profile. See the default role, &lt;code&gt;KarpenterNodeRole&lt;/code&gt;, in the full example below for more information.&lt;/p&gt;
&lt;p&gt;See also, &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/security-iam-awsmanpol.html#security-iam-awsmanpol-AmazonEKSWorkerNodePolicy&#34;&gt;the managed policy &amp;ldquo;AmazonEKSWorkerNodePolicy&amp;rdquo;&lt;/a&gt; which includes permission to describe clusters and subnets.&lt;/p&gt;
&lt;h3 id=&#34;storage&#34;&gt;Storage&lt;/h3&gt;
&lt;p&gt;Karpenter expects nothing of node storage. Configure as needed for your base
image.&lt;/p&gt;
&lt;h3 id=&#34;security-groups---firewall&#34;&gt;Security Groups - Firewall&lt;/h3&gt;
&lt;p&gt;The launch template may include a security group (i.e., instance firewall rules) and the security group must be associated with the virtual private cloud (VPC) of the EKS cluster. If none is specified, the default security group of the cluster VPC is used.&lt;/p&gt;
&lt;p&gt;The security group must permit communication with EKS control plane. Outbound access should be permitted for at least: HTTPS on port 443, DNS (UDP and TCP) on port 53, and your subnet&amp;rsquo;s network access control list (network ACL).&lt;/p&gt;
&lt;h2 id=&#34;fields-with-undefined-behavior&#34;&gt;Fields with Undefined Behavior&lt;/h2&gt;
&lt;p&gt;Resources referenced by these fields are controlled by EKS/Karpenter, and not the launch template.&lt;/p&gt;
&lt;h3 id=&#34;instance-type&#34;&gt;Instance Type&lt;/h3&gt;
&lt;p&gt;The instance type should not be specified in the launch template. Karpenter
will determine the launch template at run time.&lt;/p&gt;
&lt;h3 id=&#34;network-interfaces&#34;&gt;Network Interfaces&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/pod-networking.html&#34;&gt;AWS CNI&lt;/a&gt; will configure the network interfaces. Do not configure network instances in the launch template.&lt;/p&gt;
&lt;h2 id=&#34;creating-the-launch-template&#34;&gt;Creating the Launch Template&lt;/h2&gt;
&lt;p&gt;Launch Templates may be created via the web console, the AWS CLI, or
CloudFormation.&lt;/p&gt;
&lt;h3 id=&#34;cloudformation&#34;&gt;CloudFormation&lt;/h3&gt;
&lt;p&gt;The procedure, in summary, is to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html&#34;&gt;Create an AMI as described in the EC2 documentation.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Write a EC2 Launch Template specification including the AMI.&lt;/li&gt;
&lt;li&gt;Push the specification to AWS with CloudFormation.&lt;/li&gt;
&lt;li&gt;Update the Provisioner CRD to specify the new Launch Template.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;An example yaml cloudformation definition of a launch template for Karpenter is
provided below.&lt;/p&gt;
&lt;p&gt;CloudFormation yaml is suited for the moderately high configuration density of
launch templates, and creating the unusual InstanceProfile resource.&lt;/p&gt;
&lt;p&gt;You must manually replace these values in the template:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SecurityGroupID
&lt;ul&gt;
&lt;li&gt;list all security groups with &lt;code&gt;aws ec2 describe-security-groups&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Parameters in UserData&lt;/li&gt;
&lt;li&gt;AMI&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AWSTemplateFormatVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;2010-09-09&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Resources&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# create InstanceProfile wrapper on NodeRole&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KarpenterNodeInstanceProfile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;AWS::IAM::InstanceProfile&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Properties&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;InstanceProfileName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;KarpenterNodeInstanceProfile&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Ref&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;KarpenterNodeRole&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# create role with basic permissions for EKS node&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KarpenterNodeRole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;AWS::IAM::Role&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Properties&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RoleName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;KarpenterNodeRole&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AssumeRolePolicyDocument&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2012-10-17&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Statement&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Effect&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Allow&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Principal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Service&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                &lt;/span&gt;!&lt;span style=&#34;color:#000&#34;&gt;Sub &amp;#34;ec2.${AWS::URLSuffix}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Action&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;sts:AssumeRole&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ManagedPolicyArns&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;- !&lt;span style=&#34;color:#000&#34;&gt;Sub &amp;#34;arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;- !&lt;span style=&#34;color:#000&#34;&gt;Sub &amp;#34;arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;- !&lt;span style=&#34;color:#000&#34;&gt;Sub &amp;#34;arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;- !&lt;span style=&#34;color:#000&#34;&gt;Sub &amp;#34;arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;MyLaunchTemplate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AWS::EC2::LaunchTemplate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Properties&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LaunchTemplateData&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IamInstanceProfile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Get ARN of InstanceProfile defined above&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Arn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;!&lt;span style=&#34;color:#000&#34;&gt;GetAtt&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;KarpenterNodeInstanceProfile&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;Arn&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ImageId&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ami-074cce78125f09d61&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# UserData is Base64 Encoded&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UserData&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;!&lt;span style=&#34;color:#000&#34;&gt;Base64 &amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/etc/eks/bootstrap.sh &amp;#39;MyClusterName&amp;#39; \&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;--&lt;span style=&#34;color:#000&#34;&gt;kubelet-extra-args &amp;#39;--node-labels=node.k8s.aws/capacity-type=spot&amp;#39; \&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;--&lt;span style=&#34;color:#000&#34;&gt;b64-cluster-ca &amp;#39;LS0t....0tCg==&amp;#39; \&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;--&lt;span style=&#34;color:#000&#34;&gt;apiserver-endpoint &amp;#39;https://B0385BE29EA792E811CB5866D23C856E.gr7.us-east-2.eks.amazonaws.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BlockDeviceMappings&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Ebs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VolumeSize&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VolumeType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gp3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DeviceName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/dev/xvda&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The SecurityGroup must be associated with the cluster VPC&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SecurityGroupIds&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;sg-a69adfdb&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LaunchTemplateName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;KarpenterCustomLaunchTemplate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create the Launch Template by uploading the CloudFormation yaml file. The
sample yaml creates an IAM Object (InstanceProfile), so &lt;code&gt;--capabilities CAPABILITY_NAMED_IAM&lt;/code&gt; must be indicated.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aws cloudformation create-stack \
  --stack-name KarpenterLaunchTemplateStack \
  --template-body file://$(pwd)/lt-cfn-demo.yaml \
  --capabilities CAPABILITY_NAMED_IAM
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;define-launchtemplate-for-provisioner&#34;&gt;Define LaunchTemplate for Provisioner&lt;/h3&gt;
&lt;p&gt;The LaunchTemplate is ready to be used. Specify it by name in the &lt;a href=&#34;../../provisioner/&#34;&gt;Provisioner
CRD&lt;/a&gt;. Karpenter will use this template when creating new instances.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;karpenter.sh/v1alpha5&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Provisioner&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;provider&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;launchTemplate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CustomKarpenterLaunchTemplateDemo&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Preview: </title>
      <link>/preview/reinvent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/preview/reinvent/</guid>
      <description>
        
        
        &lt;h1 id=&#34;karpenter-reinvent-2021-builders-session&#34;&gt;Karpenter re:Invent 2021 Builders Session&lt;/h1&gt;
&lt;p&gt;​
&lt;img src=&#34;https://github.com/aws/karpenter/raw/main/website/static/banner.png&#34; alt=&#34;&#34;&gt;
​&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Please install the following tools before starting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/cli/&#34;&gt;AWS CLI&lt;/a&gt;. If you&amp;rsquo;re on macOS and have &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; installed, simply &lt;code&gt;brew install awscli&lt;/code&gt;. Otherwise, follow the AWS CLI &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html&#34;&gt;user&amp;rsquo;s guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://helm.sh/docs/intro/install/&#34;&gt;Helm&lt;/a&gt;, the Kubernetes package manager. If you&amp;rsquo;re on macOS, feel free to simply &lt;code&gt;brew install helm&lt;/code&gt;. Otherwise, follow the &lt;a href=&#34;https://helm.sh/docs/intro/install/&#34;&gt;Helm installation guide&lt;/a&gt;.
​&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;get-started&#34;&gt;Get Started&lt;/h2&gt;
&lt;p&gt;Once you have all the necessary tools installed, configure your shell with the credentials for the temporary AWS account created for this session by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Navigating to the Event Engine team dashboard and clicking on the &amp;ldquo;☁️ AWS Console&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;Configuring your shell with the credentials required by copy and pasting the command for your operating system.&lt;/li&gt;
&lt;li&gt;Running the following to set your &lt;code&gt;AWS_ACCOUNT_ID&lt;/code&gt; environmental variable:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AWS_ACCOUNT_ID&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;aws sts get-caller-identity --query Account --output text&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Updating your local Kubernetes configuration (&lt;code&gt;kubeconfig&lt;/code&gt;) by running:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;aws eks update-kubeconfig --name karpenter-demo --role-arn arn:aws:iam::&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AWS_ACCOUNT_ID&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;:role/KarpenterEESetupRole-karpenter-demo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Creating an AWS &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html&#34;&gt;IAM service-linked role&lt;/a&gt; so that Karpenter can provision Spot EC2 instances with the following command:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;aws iam create-service-linked-role --aws-service-name spot.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;N.B.&lt;/strong&gt; If the role was created previously, you will see:&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# An error occurred (InvalidInput) when calling the CreateServiceLinkedRole operation: Service role name AWSServiceRoleForEC2Spot has been taken in this account, please try a different suffix.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​
If you can run the following command and see the pods running in your EKS cluster, you&amp;rsquo;re all set! If not, please ask for help from one of the speakers in the session and they&amp;rsquo;ll get you squared away. For your reference, the cluster name is &lt;code&gt;karpenter-demo&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get pods -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;​
Congratulations! You now have access to an Amazon EKS cluster with an EKS Managed Node Group as well as all the AWS infrastructure necessary to use Karpenter.
Happy Building 🔨!
​&lt;/p&gt;
&lt;h2 id=&#34;install-karpenter&#34;&gt;Install Karpenter&lt;/h2&gt;
&lt;p&gt;Use the following command to install Karpenter into your cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;helm repo add karpenter https://charts.karpenter.sh
helm repo update
helm upgrade --install karpenter karpenter/karpenter --namespace karpenter &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --create-namespace --set serviceAccount.create&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt; --version 0.5.4 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --set controller.clusterName&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;karpenter-demo &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --set controller.clusterEndpoint&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;aws eks describe-cluster --name karpenter-demo --query &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;cluster.endpoint&amp;#34;&lt;/span&gt; --output json&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --wait &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# for the defaulting webhook to install before creating a Provisioner&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;re a Kubernetes expert, feel free to start exploring how Karpenter works on your own and if you have any questions, one of the AWS speakers will be happy to answer them.
​
If you&amp;rsquo;d like a guided walkthrough of Karpenter&amp;rsquo;s features and capabilities, you can follow the Karpenter Getting Started guide starting at the &lt;a href=&#34;https://karpenter.sh/docs/getting-started/#provisioner&#34;&gt;&amp;ldquo;Provisioner&amp;rdquo; step&lt;/a&gt;. Please don&amp;rsquo;t hesitate to ask your AWS speaker any questions you might have!&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
