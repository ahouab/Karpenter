---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: install-karpenter-eks
  namespace: karpenter-tests
spec:
  description: |
    Install Karpenter and necessary resources onto an EKS cluster.
  workspaces:
  - name: config
  params:
  - name: test-cluster-name
    description: The name of the EKS cluster to install Karpenter
  - name: karpenter-version
    description: The version of Karpenter to install. Needs to be in vx.y.z format where x, y, and z are integers.
  - name: account-id
    description: Account ID where to deploy resources
  steps:
  - name: get-region
    image: alpine/curl:3.14
    script: |
      TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
      echo $(curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/placement/region) > $(workspaces.config.path)/region

  - name: curl-cloudformation
    image: alpine/curl:3.14
    script: |
      curl -fsSL "https://karpenter.sh/"$(params.karpenter-version)"/getting-started/getting-started-with-eksctl/cloudformation.yaml" > $(workspaces.config.path)/cfn-template

  - name: create-cfn-resources
    image: amazon/aws-cli:2.7.11
    script: |
      aws cloudformation deploy \
        --stack-name "Karpenter-$(params.test-cluster-name)" \
        --template-file $(workspaces.config.path)/cfn-template \
        --capabilities CAPABILITY_NAMED_IAM \
        --parameter-overrides "ClusterName=$(params.test-cluster-name)"

  - name: create-iam-identity-mapping
    image: docker.io/weaveworks/eksctl:v0.94.0
    script: |
      eksctl create iamidentitymapping \
      --username system:node:{{EC2PrivateDNSName}} \
      --cluster "$(params.test-cluster-name)" \
      --arn "arn:aws:iam::$(params.account-id):role/KarpenterNodeRole-$(params.test-cluster-name)" \
      --group system:bootstrappers \
      --group system:nodes

  - name: irsa
    image: docker.io/weaveworks/eksctl:v0.94.0
    script: |
      eksctl create iamserviceaccount \
        --cluster "$(params.test-cluster-name)" --name karpenter --namespace karpenter \
        --role-name "$(params.test-cluster-name)-karpenter" \
        --attach-policy-arn "arn:aws:iam::$(params.account-id):policy/KarpenterControllerPolicy-$(params.test-cluster-name)" \
        --role-only \
        --approve

  - name: spot-slr
    image: amazon/aws-cli:2.7.11
    script: |
      aws iam create-service-linked-role --aws-service-name spot.amazonaws.com || true

  - name: get-cluster-details
    image: amazon/aws-cli:2.7.11
    script: |
      echo "$(aws eks describe-cluster --name $(params.test-cluster-name) --query "cluster.endpoint" --output text)" > $(workspaces.config.path)/endpoint
      aws eks update-kubeconfig --name $(params.test-cluster-name) --region $(cat $(workspaces.config.path)/region)
      cat /root/.kube/config > $(workspaces.config.path)/config
      chmod 600 $(workspaces.config.path)/config

  - name: helm-install-karpenter
    image: alpine/helm:3.9.0
    script: |
      export KARPENTER_IAM_ROLE_ARN="arn:aws:iam::$(params.account-id):role/$(params.test-cluster-name)-karpenter"
      helm repo add karpenter https://charts.karpenter.sh/
      helm repo update

      helm upgrade --install --kubeconfig $(workspaces.config.path)/config --namespace karpenter --create-namespace \
        karpenter karpenter/karpenter \
        --version $(params.karpenter-version) \
        --set serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=${KARPENTER_IAM_ROLE_ARN} \
        --set clusterName=$(params.test-cluster-name) \
        --set clusterEndpoint=$(cat $(workspaces.config.path)/endpoint)) \
        --set aws.defaultInstanceProfile=KarpenterNodeInstanceProfile-$(params.test-cluster-name) \
        --wait

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: install-karpenter-eks
  namespace: karpenter-tests
spec:
  tasks:
  - name: install-karpenter
    taskRef:
      name: install-karpenter-eks
    params:
    - name: test-cluster-name
      value: "test-eks-cluster"
    - name: karpenter-version
      value: "v0.13.2"
    - name: account-id
      value: "757543820853" # Add your account-id
    workspaces:
    - name: config
      workspace: ws
  workspaces:
  - name: ws
