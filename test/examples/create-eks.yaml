---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-eks
  namespace: karpenter-tests
spec:
  description: |
    Create an EKS cluster with Managed Node Groups.
  workspaces:
  - name: config
  params:
  - name: cluster-name
    description: The name of the EKS cluster you want to spin up.
  - name: k8s-version
    description: The K8s version used for the cluster.
  steps:
  - name: get-region
    image: alpine/curl:3.9.0
    script: |
      TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
      echo $(curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/placement/region) > $(workspaces.config.path)/region
  - name: create-cluster
    image: docker.io/weaveworks/eksctl:v0.94.0
    script: |
      cmd="create"
      eksctl get cluster --name "${CLUSTER_NAME}" && cmd="upgrade"
      eksctl ${cmd} cluster -f - <<EOF
      ---
      apiVersion: eksctl.io/v1alpha5
      kind: ClusterConfig
      metadata:
        name: $(params.cluster-name)
        region: $(cat $(workspaces.config.path)/region)
        version: "$(params.k8s-version)"
        tags:
          karpenter.sh/discovery: $(params.cluster-name)
      managedNodeGroups:
        - instanceType: m5.large
          amiFamily: AmazonLinux2
          name: $(params.cluster-name)-system-pool
          desiredCapacity: 2
          minSize: 2
          maxSize: 2
      iam:
        withOIDC: true
      EOF

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: create-eks
  namespace: karpenter-tests
spec:
  tasks:
  - name: create-eks
    taskRef:
      name: create-eks
    params:
      - name: cluster-name
        value: 'test-eks-cluster'
      - name: k8s-version
        value: '1.21'
    workspaces:
      - name: config
        workspace: ws
  workspaces:
  - name: ws
