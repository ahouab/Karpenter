---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: install-karpenter-kit
  namespace: karpenter-tests
spec:
  description: |
    Install Karpenter and necessary resources onto an EKS cluster.
  params:
  - name: test-cluster-name
    description: The name of the EKS cluster to install Karpenter
  - name: karpenter-version
    description: The version of Karpenter to install. Needs to be in vx.y.z format where x, y, and z are integers.
  workspaces:
  - name: config
  steps:
  - name: get-kubeconfig
    image: bitnami/kubectl:1.22
    script: |
      #!/usr/bin/env bash
      echo "Getting Guest Cluster kube-admin config"
      kubectl get secret -n karpenter-tests $(params.test-cluster-name)-kube-admin-config -ojsonpath='{.data.config}' | base64 -d > $(workspaces.config.path)/kubeconfig

  - name: curl-cloudformation
    image: alpine/curl:3.14
    script: |
      curl -fsSL "https://karpenter.sh/"$(params.karpenter-version)"/getting-started/getting-started-with-eksctl/cloudformation.yaml" > $(workspaces.config.path)/cfn-template

  - name: create-cfn-resources
    image: amazon/aws-cli:2.7.11
    script: |
      aws cloudformation deploy \
        --stack-name "Karpenter-$(params.test-cluster-name)" \
        --template-file $(workspaces.config.path)/cfn-template \
        --capabilities CAPABILITY_NAMED_IAM \
        --parameter-overrides "ClusterName=$(params.test-cluster-name)"

      export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account --no-cli-pager)
      aws iam attach-role-policy --role-name KitDPRole-$(params.test-cluster-name) --policy-arn arn:aws:iam::${AWS_ACCOUNT_ID}:policy/KarpenterControllerPolicy-$(params.test-cluster-name)

  - name: spot-slr
    image: amazon/aws-cli:2.7.11
    script: |
      aws iam create-service-linked-role --aws-service-name spot.amazonaws.com || true

  - name: helm-install-karpenter
    image: alpine/helm:3.9.0
    script: |
      #!/bin/sh
      export CLUSTER_ENDPOINT=$(cat $(workspaces.config.path)/kubeconfig | grep server | awk '{print $2}') > /dev/null

      echo $CLUSTER_ENDPOINT
      helm repo add karpenter https://charts.karpenter.sh/
      helm repo update

      helm upgrade --kubeconfig=$(workspaces.config.path)/kubeconfig --install --namespace karpenter --create-namespace \
        karpenter karpenter/karpenter \
        --version $(params.karpenter-version) \
        --set clusterName=$(params.test-cluster-name) \
        --set clusterEndpoint=${CLUSTER_ENDPOINT} \
        --set aws.defaultInstanceProfile=KarpenterNodeInstanceProfile-$(params.test-cluster-name) \
        --wait

  - name: create-provisioner
    image: bitnami/kubectl:1.22
    script: |
      cat <<EOF | kubectl --kubeconfig=$(workspaces.config.path)/kubeconfig apply -f -
      apiVersion: karpenter.sh/v1alpha5
      kind: Provisioner
      metadata:
        name: default
      spec:
        limits:
          resources:
            cpu: 1k
        provider:
          instanceProfile: KitDP-$(params.test-cluster-name)
          securityGroupSelector:
            kubernetes.io/cluster/$(params.test-cluster-name): owned
          subnetSelector:
            karpenter.sh/discovery: $(params.test-cluster-name)
        ttlSecondsAfterEmpty: 30
      EOF

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: install-karpenter-kit
  namespace: karpenter-tests
spec:
  tasks:
  - name: install-karpenter
    taskRef:
      name: install-karpenter-kit
    params:
    - name: test-cluster-name
      value: "kit-guest-cluster"
    - name: karpenter-version
      value: "v0.12.1"
    workspaces:
    - name: config
      workspace: ws
  workspaces:
  - name: ws
