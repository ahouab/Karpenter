
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: horizontalautoscalers.karpenter.sh
spec:
  group: karpenter.sh
  names:
    kind: HorizontalAutoscaler
    listKind: HorizontalAutoscalerList
    plural: horizontalautoscalers
    singular: horizontalautoscaler
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: HorizontalAutoscaler is the Schema for the horizontalautoscalers
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HorizontalAutoscalerSpec is modeled after https://godoc.org/k8s.io/api/autoscaling/v2beta2#HorizontalPodAutoscalerSpec
            This enables parity of functionality between Pod and Node autoscaling,
            with a few minor differences. 1. ObjectSelector is replaced by NodeSelector.
            2. Metrics.PodsMetricSelector is replaced by the more generic Metrics.ReplicaMetricSelector.
          properties:
            behavior:
              description: Behavior configures the scaling behavior of the target
                in both Up and Down directions (scaleUp and scaleDown fields respectively).
                If not set, the default ScalingRules for scale up and scale down are
                used.
              properties:
                scaleDown:
                  description: ScaleDown is scaling policy for scaling Down. If not
                    set, the default value is to allow to scale down to minReplicas,
                    with a 300 second stabilization window (i.e., the highest recommendation
                    for the last 300sec is used).
                  properties:
                    policies:
                      description: policies is a list of potential scaling polices
                        which can be used during scaling. At least one policy must
                        be specified, otherwise the ScalingRules will be discarded
                        as invalid
                      items:
                        description: ScalingPolicy is a single policy which must hold
                          true for a specified past interval.
                        properties:
                          periodSeconds:
                            description: PeriodSeconds specifies the window of time
                              for which the policy should hold true. PeriodSeconds
                              must be greater than zero and less than or equal to
                              1800 (30 min).
                            format: int32
                            type: integer
                          type:
                            description: Type is used to specify the scaling policy.
                            type: string
                          value:
                            description: Value contains the amount of change which
                              is permitted by the policy. It must be greater than
                              zero
                            format: int32
                            type: integer
                        required:
                        - periodSeconds
                        - type
                        - value
                        type: object
                      type: array
                    selectPolicy:
                      description: selectPolicy is used to specify which policy should
                        be used. If not set, the default value MaxPolicySelect is
                        used.
                      type: string
                    stabilizationWindowSeconds:
                      description: 'StabilizationWindowSeconds is the number of seconds
                        for which past recommendations should be considered while
                        scaling up or scaling down. StabilizationWindowSeconds must
                        be greater than or equal to zero and less than or equal to
                        3600 (one hour). If not set, use the default values: - For
                        scale up: 0 (i.e. no stabilization is done). - For scale down:
                        300 (i.e. the stabilization window is 300 seconds long).'
                      format: int32
                      type: integer
                  type: object
                scaleUp:
                  description: 'ScaleUp is scaling policy for scaling Up. If not set,
                    the default value is the higher of:   * increase no more than
                    4 replicas per 60 seconds   * double the number of replicas per
                    60 seconds No stabilization is used.'
                  properties:
                    policies:
                      description: policies is a list of potential scaling polices
                        which can be used during scaling. At least one policy must
                        be specified, otherwise the ScalingRules will be discarded
                        as invalid
                      items:
                        description: ScalingPolicy is a single policy which must hold
                          true for a specified past interval.
                        properties:
                          periodSeconds:
                            description: PeriodSeconds specifies the window of time
                              for which the policy should hold true. PeriodSeconds
                              must be greater than zero and less than or equal to
                              1800 (30 min).
                            format: int32
                            type: integer
                          type:
                            description: Type is used to specify the scaling policy.
                            type: string
                          value:
                            description: Value contains the amount of change which
                              is permitted by the policy. It must be greater than
                              zero
                            format: int32
                            type: integer
                        required:
                        - periodSeconds
                        - type
                        - value
                        type: object
                      type: array
                    selectPolicy:
                      description: selectPolicy is used to specify which policy should
                        be used. If not set, the default value MaxPolicySelect is
                        used.
                      type: string
                    stabilizationWindowSeconds:
                      description: 'StabilizationWindowSeconds is the number of seconds
                        for which past recommendations should be considered while
                        scaling up or scaling down. StabilizationWindowSeconds must
                        be greater than or equal to zero and less than or equal to
                        3600 (one hour). If not set, use the default values: - For
                        scale up: 0 (i.e. no stabilization is done). - For scale down:
                        300 (i.e. the stabilization window is 300 seconds long).'
                      format: int32
                      type: integer
                  type: object
              type: object
            maxReplicas:
              description: MaxReplicas is the upper limit for the number of replicas
                to which the autoscaler can scale up. It cannot be less that minReplicas.
              format: int32
              type: integer
            metrics:
              description: Metrics contains the specifications for which to use to
                calculate the desired replica count (the maximum replica count across
                all metrics will be used).  The desired replica count is calculated
                multiplying the ratio between the target value and the current value
                by the current number of replicas.  Ergo, metrics used must decrease
                as the replica count is increased, and vice-versa.  See the individual
                metric source types for more information about how each type of metric
                must respond. If not set, the default metric will be set to 80% average
                CPU utilization.
              items:
                description: Metrics is modeled after https://godoc.org/k8s.io/api/autoscaling/v2beta2#MetricSpec
                properties:
                  prometheus:
                    description: PrometheusMetricSource defines a metric in Prometheus
                    properties:
                      query:
                        type: string
                      target:
                        description: MetricTarget defines the target value, average
                          value, or average utilization of a specific metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of
                              the average of the resource metric across all relevant
                              pods, represented as a percentage of the requested value
                              of the resource for the pods. Currently only valid for
                              Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            anyOf:
                            - type: integer
                            - type: string
                            description: averageValue is the target value of the average
                              of the metric across all relevant pods (as a quantity)
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type:
                            description: type represents whether the metric type is
                              Utilization, Value, or AverageValue
                            type: string
                          value:
                            anyOf:
                            - type: integer
                            - type: string
                            description: value is the target value of the metric (as
                              a quantity).
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        required:
                        - type
                        type: object
                    required:
                    - query
                    - target
                    type: object
                  type:
                    description: type is the type of metric source.  It should be
                      one of "Object", "Replicas" or "Resource", each mapping to a
                      matching field in the object.
                    type: string
                required:
                - type
                type: object
              type: array
            minReplicas:
              description: MinReplicas is the lower limit for the number of replicas
                to which the autoscaler can scale down. MinReplicas is allowed to
                be 0 if the
              format: int32
              type: integer
            scaleTargetRef:
              description: ScaleTargetRef points to the target resource to scale.
              properties:
                apiVersion:
                  description: API version of the referent
                  type: string
                kind:
                  description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                  type: string
                name:
                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
              required:
              - kind
              - name
              type: object
          required:
          - maxReplicas
          - minReplicas
          - scaleTargetRef
          type: object
        status:
          description: HorizontalAutoscalerStatus defines the observed state of HorizontalAutoscaler
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
