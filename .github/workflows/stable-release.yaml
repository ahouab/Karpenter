name: StableRelease

on:
  workflow_run:
    workflows: [ReleaseTag]
    types: [completed]

permissions:
  id-token: write
  pull-requests: write
  contents: write

jobs:
  stable-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.repository == 'aws/karpenter' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sed -En 's/^go[[:space:]]+([[:digit:].]+)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin/
            ~/.kubebuilder/bin/k8s
          key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
      - run: make toolchain
      - name: Retreive tag from artifacts
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "tag"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/tags.zip`, Buffer.from(download.data));
      - run: unzip tags.zip
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::071440425669:role/Github
          aws-region: us-east-1
      - run: make docgen
      - run: |
          git config user.name "StableRelease"
          git config user.email "StableRelease@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git config pull.rebase false
      - run: SNAPSHOT_TAG=$(cat tag.txt) make snapshot
      - run: SNAPSHOT_TAG=$(cat tag.txt) make stable-release-pr
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'chore: Release ${{ env.STABLE_RELEASE_VERSION }}',
              owner,
              repo,
              head: '${{ env.STABLE_RELEASE_VERSION }}',
              base: 'main',
              body: [
                'Stable Release Changes for ${{ env.STABLE_RELEASE_VERSION }}',
                'This PR is generated by [StableRelease](https://github.com/aws/karpenter/actions/workflows/stable-release.yml).'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['stable-release','website','helm-charts']
            });
