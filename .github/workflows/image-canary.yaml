name: ImageCanary
on:
  schedule:
  - cron: '0 */1 * * *'
jobs:
  ImageCanary:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # aws-actions/configure-aws-credentials@v4.0.1
    if: github.repository == 'aws/karpenter-provider-aws'
    steps:
    - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
      with:
        role-to-assume: arn:aws:iam::${{ vars.READONLY_ACCOUNT_ID }}:role/${{ vars.READONLY_ROLE_NAME }}
        aws-region: ${{ vars.READONLY_REGION }}
        role-duration-seconds: 900
    # Authenticate to public ECR to prevent rate limiting
    - uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
      with:
        registry: public.ecr.aws
        logout: true
      env:
        AWS_REGION: us-east-1
    - name: Pull artifacts
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Translates a git tag to the corresponding ECR tag. Starting with Karpenter v0.35.0 the leading v is dropped in the ECR tag.
        function getECRTag() {
            tag="${1}"
            major=$(echo "${tag}" | sed -E 's/v([[:digit:]]+).*/\1/')
            minor=$(echo "${tag}" | sed -E 's/v[[:digit:]]+\.([[:digit:]]+).*/\1/')
            if [ "${major}" -gt "0" ] || [ "${minor}" -gt "34" ]; then
                tag=$(echo "${tag}" | tr -d 'v')
            fi
            echo "${tag}"
        }

        readarray tags < <(gh release list --json tagName -L 10 | yq '.[].tagName')
        for tag in "${tags[@]}"; do
          tag="$(getECRTag "${tag}")"
          for artifact in "karpenter" "karpenter-crd"; do
            if ! helm pull "oci://public.ecr.aws/karpenter/${artifact}" --version "${tag}"; then
              printf "failed to pull OCI artifact (artifact: %s, tag: %s)\n" "${image}" "${tag}"
              exit 1
            fi
          done
          if ! docker pull "public.ecr.aws/karpenter/controller:${tag}"; then
              printf "failed to pull controller image (tag: %s)\n" "${tag}"
              exit 1
          fi
        done
    - name: Notify slack of failure
      if: failure() && github.event_name != 'workflow_run'
      uses: ./.github/actions/e2e/slack/send-message
      with:
        message: ":alert: image canary failure (https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) @channel"
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
