---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: hello-world-task
spec:
  description: |
    Say Hello World, with a nice sign off.
  params:
  - name: test-param
    description: A placeholder test-parameter
    default: ".... or is it?"
  workspaces:
  - name: output
    description: |
      A workspace that has the value of the successful shared workspace
  steps:
  - name: hello-world
    image: docker.io/njtran/scratch:latest
    script: |
      echo "hello world"
      echo "this is a parameter test$(params.test-param)" > $(workspaces.output.path)/message
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: receive-hello-world-task
spec:
  description: |
    Receive Hello World, with a nice sign off.
  params:
  - name: test-param
    description: A placeholder test-parameter
    default: ".... or is it?"
  workspaces:
  - name: input
    description: |
      A workspace that has the value of the successful shared workspace
  steps:
  - name: hello-world
    image: docker.io/njtran/scratch:latest
    script: |
      echo "hello world"
      cat $(workspaces.input.path)/message
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: hello-world-pipeline
spec:
  params:
  - name: test-param
    description: A placeholder test-parameter
    default: ".... or is it?"
  tasks:
  - name: hello-world
    taskRef:
      name: hello-world-task
    params:
      - name: test-param
        value: ", indeed it is!"
    workspaces:
      - name: output
        workspace: ws
  - name: receive-hello-world
    runAfter:
      - hello-world
    taskRef:
      name: receive-hello-world-task
    workspaces:
      - name: input
        workspace: ws
  workspaces:
  - name: ws
    description: The folder where we write the message to
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: shared-hello-world-pipeline-run
  description: Pipeline configured to show how to use Workspaces
spec:
  pipelineRef:
    name: hello-world-pipeline
  podTemplate:
    nodeSelector:
      kubernetes.io/arch: amd64
  workspaces:
    - name: ws # this workspace name must be declared in the Pipeline
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce # access mode may affect how you can use this volume in parallel tasks
          resources:
            requests:
              storage: 1Mi
