###
# Compute resource request utilization of pods scheduled to nodes matching the node selector
###
apiVersion: autoscaling.karpenter.sh/v1alpha1
kind: MetricsProducer
metadata:
  name: microservices
spec:
  reservedCapacity:
    nodeSelector:
      eks.amazonaws.com/nodegroup: default
---
###
# Maintain 60% utilization of CPU or Memory (whichever is greater)
# Set the desired replicas on scaleTargetRef of the Node Group below
###
apiVersion: autoscaling.karpenter.sh/v1alpha1
kind: HorizontalAutoscaler
metadata:
  name: microservices
spec:
  scaleTargetRef:
    apiVersion: autoscaling.karpenter.sh/v1alpha1
    kind: ScalableNodeGroup
    name: microservices
  minReplicas: 3
  maxReplicas: 23
  metrics:
  - prometheus:
      query: karpenter_reserved_capacity_cpu_utilization{name="microservices"}
      target:
        type: Utilization
        value: 60
  - prometheus:
      query: karpenter_reserved_capacity_memory_utilization{name="microservices"}
      target:
        type: Utilization
        value: 60
---
apiVersion: autoscaling.karpenter.sh/v1alpha1
kind: ScalableNodeGroup
metadata:
  name: microservices
spec:
  type: AWSEKSNodeGroup
  id: arn:aws:eks:us-west-2:1234567890:nodegroup:test-cluster/microservices/qwertyuiop
